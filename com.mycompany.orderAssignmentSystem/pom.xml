<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.mycompany.orderAssignmentSystem</groupId>
	<artifactId>com.mycompany.orderAssignmentSystem</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>com.mycompany.orderAssignmentSystem</name>
	<url>http://maven.apache.org</url>

	<properties>
		<picocli-version>4.6.1</picocli-version>
		<h2-version46>2.2.224</h2-version46>

		<awaitility-version>4.0.2</awaitility-version>
		<hibernate-core-version46>5.4.32.Final</hibernate-core-version46>
		<javax.persistence-api-version>2.2</javax.persistence-api-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<junit.version>4.13.1</junit.version>
		<lang3.version>3.0</lang3.version>
		<mockito.version>3.7.0</mockito.version>
		<log4j.version>2.23.1</log4j.version>
		<postgresql.version>42.7.2</postgresql.version>
		<assertj-swing-junit-version>3.17.1</assertj-swing-junit-version>
		<postgres.user>testUser</postgres.user>
		<postgres.password>test123</postgres.password>
		<postgres.dbName>orderWorkerTestDb</postgres.dbName>
		<cucumber.version>5.5.0</cucumber.version>

	</properties>

	<dependencies>

		<!-- H2 database just to micic postgresql for unit test -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2-version46}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>javax.persistence-api</artifactId>
			<version>${javax.persistence-api-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate-core-version46}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertj-swing-junit-version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>${awaitility-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli-version}</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.1</version>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.15.8</version>
				<configuration>
					<targetClasses>
						<param>
							com.mycompany.orderAssignmentSystem.controller.*</param>
					</targetClasses>
					<targetTests>
						<param>
							com.mycompany.orderAssignmentSystem.controller.*</param>
					</targetTests>
					<excludedClasses>
						<param>
							com.mycompany.orderAssignmentSystem.repository.postgresql.**</param>
						<param>
							com.mycompany.orderAssignmentSystem.repository.view.swing.**</param>
					</excludedClasses>
					<excludedTestClasses>
						<param>
							com.mycompany.orderAssignmentSystem.controller.**IT</param>
					</excludedTestClasses>
					<mutators>
						<mutator>STRONGER</mutator>
					</mutators>
					<outputFormats>
						<outputFormat>HTML</outputFormat>
					</outputFormats>
					<mutationThreshold>90</mutationThreshold>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>mutationCoverage</goal>
						</goals>
						<phase>verify</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.11</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<excludes>
						<exclude>
							com/mycompany/orderAssignmentSystem/model/**</exclude>
						<exclude>
							com/mycompany/orderAssignmentSystem/app/**</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>3.2.5</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<archive>
								<manifest>
									<mainClass>
										com.mycompany.orderAssignmentSystem.app.OrderAssignmentSwingApp</mainClass>
								</manifest>
							</archive>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.5.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>4.0.0-M13</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
								<source>src/bdd/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-resource</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/bdd/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.34.1</version>
				<configuration>
					<images>
						<image>
							<name>orderworkerassignment</name>
							<build>
								<contextDir>${project.basedir}</contextDir>
							</build>
							<run>
								<network>
									<mode>custom</mode>
									<name>my-network</name>
								</network>
								<wait>
									<log>Hello World!</log>
									<time>10000</time>
								</wait>
								<dependsOn>
									<container>postgres</container>
								</dependsOn>
							</run>
						</image>
						<image>
							<name>postgres:14.1-alpine</name>
							<alias>postgres</alias>
							<run>
								<network>
									<mode>custom</mode>
									<name>my-network</name>
									<alias>postgresdb</alias>
								</network>
								<ports>
									<port>5432:5432</port>
								</ports>
								<env>
									<POSTGRES_USER>${--postgres-user}</POSTGRES_USER>
									<POSTGRES_PASSWORD>
										${--postgres-pass}</POSTGRES_PASSWORD>
									<POSTGRES_DB>${--postgres-database}</POSTGRES_DB>
								</env>
							</run>
						</image>
						<image>
							<alias>app</alias>
							<external>
								<type>compose</type>
								<basedir>${project.basedir}</basedir>
							</external>
							<run>
								<wait>
									<log>Hello World!</log>
									<time>10000</time>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.1.2</version>
				<executions>
					<execution>
						<id>default-it</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>

					<execution>
						<id>e2e-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/*IT.java</exclude>
							</excludes>
							<includes>
								<include>**/*E2E.java</include>
							</includes>
							<includes>
								<include>**/*BDD.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>mutation-testing-with-coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>integration-testing</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
